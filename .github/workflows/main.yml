name: Daily Trading Bot Analysis

on:
  schedule:
    - cron: '0 9 * * 1-5'  # ◊ô◊®◊ï◊• ◊õ◊ú ◊ô◊ï◊ù ◊¢◊°◊ß◊ô◊ù ◊ë-9:00 ◊ë◊ë◊ï◊ß◊® (UTC)
  workflow_dispatch:  # ◊û◊ê◊§◊©◊® ◊î◊®◊¶◊î ◊ô◊ì◊†◊ô◊™

env:
  NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
  ALPHA_VANTAGE_KEY: ${{ secrets.ALPHA_VANTAGE_KEY }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

jobs:
  run-trading-bot:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install system dependencies for TA-Lib
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libta-lib-dev

    - name: Create requirements.txt if missing
      run: |
        if [ ! -f requirements.txt ]; then
          echo "Creating requirements.txt file..."
          cat > requirements.txt << EOF
pandas>=1.5.0
numpy>=1.23.0
yfinance>=0.2.18
scikit-learn>=1.2.0
textblob>=0.17.1
requests>=2.28.0
matplotlib>=3.6.0
plotly>=5.11.0
python-dotenv>=0.19.0
schedule>=1.2.0
backtrader>=1.9.76.123
alpha-vantage>=2.3.1
TA-Lib>=0.4.24
EOF
        fi

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create default tickers file
      run: |
        if [ ! -f tickers.json ]; then
          echo '{
            "tickers": [
              "AAPL", "MSFT", "GOOGL", "AMZN", "META",
              "TSLA", "NVDA", "JPM", "V", "JNJ"
            ]
          }' > tickers.json
        fi

    - name: Run trading bot
      run: |
        python main.py

    - name: Upload results as artifact
      uses: actions/upload-artifact@v4
      with:
        name: trading-results
        path: |
          trading_signals.json
          trading_signals.html
          trading_bot.log

    - name: Send Telegram notification
      if: always()
      run: |
        if [ -f trading_signals.json ]; then
          SIGNALS=$(python -c "
          import json
          with open('trading_signals.json') as f:
              data = json.load(f)
          print(data['signals_generated'])
          ")
          
          if [ "$SIGNALS" -gt 0 ]; then
            TOP_SIGNAL=$(python -c "
            import json
            with open('trading_signals.json') as f:
                data = json.load(f)
            if data['signals']:
                signal = data['signals'][0]
                print(f'{signal[\"ticker\"]}: {signal[\"action\"]} at ${signal[\"price\"]:.2f}')
            ")
            
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
              -d text="ü§ñ Trading Bot Complete - Generated $SIGNALS signals. Top: $TOP_SIGNAL"
          else
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
              -d text="ü§ñ Trading Bot Complete - No signals generated today."
          fi
        else
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="‚ùå Trading Bot Failed - Error running bot"
        fi
